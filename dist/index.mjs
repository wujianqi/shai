var p=Object.defineProperty,f=(i,e,t)=>e in i?p(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,n=(i,e,t)=>(f(i,typeof e!="symbol"?e+"":e,t),t);function l(i,e){return Object.prototype.hasOwnProperty.call(i,e)}function y(i){const e=Array.isArray(i)?[]:{};for(const t in i)if(l(i,t)){const s=i[t];typeof s=="object"?e[t]=y(s):e[t]=s}return e}class _{constructor(){n(this,"__funcs",[]),n(this,"__data",[]),n(this,"__propKey","setting"),n(this,"__SB",Symbol()),this.use=this.use.bind(this),this.gen=this.gen.bind(this)}setVal(e,t){const s=e.length-1;e.reduce((r,a,o)=>(o===s&&(r[a]=t),r[a]),this.__data)}addChild(e,t,s){const r=s.key||"children",a=this.mapping(e,s);if(t<1)return a;{const o=y(a);t--;for(let c=0,h=o.length;c<h;c++)t===1?o[c][r]=y(a):o[c][r]=this.addChild(a[c],t,s);return o}}mapping(e,t){if(typeof e=="object"&&t){const s=o=>{let c=1;return typeof o=="number"?c=o:Array.isArray(o)&&typeof o[0]=="number"&&typeof o[1]=="number"&&(c=~~(Math.random()*(o[1]-o[0])+o[0])),c},r=typeof t=="number"||Array.isArray(t)&&typeof t[0]=="number"&&typeof t[1]=="number"?s(t):typeof t=="object"&&t.length?s(t.length):1,a=new Array(r);delete e[this.__propKey];for(let o=0;o<r;o++)a[o]=y(e);return a}else return e}parseBlock(){const e=s=>{const r=s[this.__propKey];if(!Array.isArray(r)&&typeof r=="object"){const a=typeof r.level=="number"?r.level:1;s=this.addChild(s,a,r)}else s=this.mapping(s,r);return s},t=(s,r)=>{!Array.isArray(s)&&l(s,this.__propKey)&&(s=e(s),r?this.setVal(r,s):this.setVal([],this.__data=s));for(const a in s)if(l(s,a)){const o=s[a];Array.isArray(o)&&o[0]!==this.__SB?o.forEach((c,h)=>t(c,r?r.concat([a,h]):[a,h])):!Array.isArray(o)&&typeof o=="object"&&t(o,r?r.concat([a]):[a])}};t(this.__data)}setValues(e,t){if(Array.isArray(e))if(e[0]===this.__SB){const s=t||[],r=this.__funcs[e[1]].concat();try{this.setVal(s,r.length>0?r[0](...r[1]):e)}catch(a){throw new Error(`${s.length>0?s.join("."):e}: error, ${a}`)}}else e.forEach((s,r)=>this.setValues(s,t?t.concat([r]):[r]));else typeof e=="object"&&Object.keys(e).forEach(s=>this.setValues(e[s],t?t.concat([s]):[s]))}use(e,...t){return[this.__SB,this.__funcs.push([e,t])-1]}gen(e,t){if(typeof e=="object")return t&&(this.__propKey=t),this.__data=e,this.parseBlock(),this.setValues(this.__data),this.__data}}export{_ as default};
